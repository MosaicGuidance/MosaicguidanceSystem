/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Nadeem
 */
public class AISDecoder extends javax.swing.JFrame {

    /**
     * Creates new form AISDecoder
     */
    public AISDecoder() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MOSAiC Guidance System - AIS Packet Decoder");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Decoder"));

        jTextField1.setText("AIS Packet");
        jTextField1.setToolTipText("Enter an AIVDM or GPGBS or GPRMC type AIS Packet");
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
        });
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setText("Read ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jButton2.setText("Decode");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenu1.setText("File");

        jMenuItem2.setText("Clear");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Help");
        jMenu1.add(jMenuItem3);

        jMenuItem1.setText("Exit");
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        packet = jTextField1.getText();
        if (!(packet.contains("AIVDM")) && !(packet.contains("GPGBS")) && !(packet.contains("GPRMC")))
        {
            jTextArea2.setText("Invalid Packet Entered. Please enter a valid AIS AIVDM Packet\n");
        } else
        {
            jTextArea2.setText("Packet: " + packet);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusGained
        // TODO add your handling code here:
        if (jTextField1.getText().equals("AIS Packet"))
            jTextField1.setText("");
    }//GEN-LAST:event_jTextField1FocusGained

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        if (packet.contains("AIVDM"))
        {
            AIVDM aivdmObj = new AIVDM();
            String[] dataExtr = packet.split(",");
            aivdmObj.setData(dataExtr);
            aivdmObj.display();
            jTextArea2.setText("");
            jTextArea2.setText("New Packet\n");
            jTextArea2.append("Packet Name: " + aivdmObj.getPacketName() + "\n");
            jTextArea2.append("Fragment Count: " + aivdmObj.getFragCount() + "\n");
            jTextArea2.append("Fragment Number: " + aivdmObj.getSeqMsgID() + "\n");
            jTextArea2.append("Channel: " + aivdmObj.getChannelCode() + "\n");
            jTextArea2.append("Payload: " + aivdmObj.getPayload() + "\n");
            jTextArea2.append("EOD: " + aivdmObj.getEod() + "\n");            
            aivdmObj.decodePayload();
            jTextArea2.append("Payload Details: \n");
            jTextArea2.append("Message Ind: " + aivdmObj.getMsgInd()+ "\n");
            jTextArea2.append("Repeat Ind: " + aivdmObj.getRepeatInd()+ "\n");
            jTextArea2.append("MMSI: " + aivdmObj.getMMSI()+ "\n");
            jTextArea2.append("Status: " + aivdmObj.getStatus()+ "\n");
            jTextArea2.append("Turn: " + aivdmObj.getTurn()+ "\n");
            jTextArea2.append("Speed: " + aivdmObj.getSpeed()+ "\n");
            jTextArea2.append("Accuracy: " + aivdmObj.getAccuracy()+ "\n");
            jTextArea2.append("Longitude: " + aivdmObj.getLongitude()+ "\n");
            jTextArea2.append("Latitude: " + aivdmObj.getLatitude()+ "\n");
            jTextArea2.append("Course: " + aivdmObj.getCourse()+ "\n");
            jTextArea2.append("Heading: " + aivdmObj.getHeading()+ "\n");
            jTextArea2.append("Seconds: " + aivdmObj.getSeconds()+ "\n");
            jTextArea2.append("Maneuver: " + aivdmObj.getManeuver()+ "\n");
            jTextArea2.append("RAIM: " + aivdmObj.getRaim()+ "\n");
            jTextArea2.append("Radio: " + aivdmObj.getRadio()+ "\n");        
        } else if (packet.contains("GPGBS"))
        {
            GPGBS gpgbsObj = new GPGBS();
            String[] dataExtr = packet.split(",");
            gpgbsObj.setData(dataExtr);
            gpgbsObj.display();
            jTextArea2.setText("");
            jTextArea2.setText("New Packet\n");
            jTextArea2.append("Packet Name: " + gpgbsObj.getPacketName() + "\n");
            jTextArea2.append("UTC: " + gpgbsObj.getUTC() + "\n");
            jTextArea2.append("Error Latitude: " + gpgbsObj.getErrLat() + "\n");
            jTextArea2.append("Error Longitude: " + gpgbsObj.getErrLon() + "\n");
            jTextArea2.append("Error Altitude: " + gpgbsObj.getErrAlt() + "\n");
            jTextArea2.append("FSatID: " + gpgbsObj.getFSatID() + "\n");
            jTextArea2.append("ProbDetFsat: " + gpgbsObj.getProbDetFsat() + "\n");
            jTextArea2.append("Ext Bias: " + gpgbsObj.getExtBias() + "\n");
            jTextArea2.append("Std Dev: " + gpgbsObj.getStdDev() + "\n");
            jTextArea2.append("Checksum: " + gpgbsObj.getChecksum() + "\n");
            
        } else if (packet.contains("GPRMC"))
        {
            GPRMC gprmcObj = new GPRMC();
            String[] dataExtr = packet.split(",");
            gprmcObj.setData(dataExtr);
            gprmcObj.display();
            jTextArea2.setText("");
            jTextArea2.setText("New Packet\n");
            jTextArea2.append("Packet Name: " + gprmcObj.getPacketName() + "\n");
            jTextArea2.append("UTC: " + gprmcObj.getUTC() + "\n");
            jTextArea2.append("Status: " + gprmcObj.getStatus() + "\n");
            jTextArea2.append("Latitude: " + gprmcObj.getLatitude() + "\n");
            jTextArea2.append("Latitude Direction: " + gprmcObj.getLat_dir() + "\n");
            jTextArea2.append("Longitude: " + gprmcObj.getLongitude() + "\n");
            jTextArea2.append("Longitude Direction: " + gprmcObj.getLon_dir() + "\n");
            jTextArea2.append("Speed Over Ground: " + gprmcObj.getSOG() + "\n");
            jTextArea2.append("Track Angle: " + gprmcObj.getTrackangle() + "\n");
            jTextArea2.append("Date: " + gprmcObj.getDate() + "\n");
            jTextArea2.append("Mag Var: " + gprmcObj.getMagvar() + "\n");
            jTextArea2.append("Checksum: " + gprmcObj.getChecksum() + "\n");
        } else
        {
            jTextArea2.append("No New Packet Info, please enter a new AIS Packet \n");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        jTextArea2.setText("");
        packet = "";
        jTextField1.setText("AIS Packet");
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AISDecoder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AISDecoder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AISDecoder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AISDecoder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AISDecoder().setVisible(true);
            }
        });
    }
    
   
    private String packet; 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
